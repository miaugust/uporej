// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rejupo.Models;

namespace Rejupo.Migrations.FakeDb
{
    [DbContext(typeof(FakeDbContext))]
    [Migration("20181016130307_PositionAdded")]
    partial class PositionAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview2-35157");

            modelBuilder.Entity("Rejupo.Areas.Identity.Data.RejupoUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Division")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("RejupoUser");
                });

            modelBuilder.Entity("Rejupo.Models.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Abbreviation")
                        .IsRequired();

                    b.Property<string>("Descritption");

                    b.HasKey("Id");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("Rejupo.Models.Docs.AuthorizationToProcesPersonalDataDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CancelingDate");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("LastChangedId");

                    b.Property<string>("Name");

                    b.Property<string>("OwnerId");

                    b.Property<DateTime?>("ValidTo");

                    b.HasKey("Id");

                    b.HasIndex("LastChangedId");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("AuthorizationToProcesPersonalDataDocuments");
                });

            modelBuilder.Entity("Rejupo.Models.Docs.PersonalDataAuthorization_Document_Scope", b =>
                {
                    b.Property<int>("DocumentId");

                    b.Property<int>("ScopeId");

                    b.HasKey("DocumentId", "ScopeId");

                    b.HasIndex("ScopeId");

                    b.ToTable("PersonalDataAuthorization_Document_Scope");
                });

            modelBuilder.Entity("Rejupo.Models.Docs.PersonalDataAuthorizationScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Scope")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("PersonalDataAuthorizationScope");
                });

            modelBuilder.Entity("Rejupo.Models.Employee", b =>
                {
                    b.Property<string>("ControlNumber")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Division")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Pos_title");

                    b.HasKey("ControlNumber");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Rejupo.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("Rejupo.Models.Docs.AuthorizationToProcesPersonalDataDocument", b =>
                {
                    b.HasOne("Rejupo.Models.Log", "LastChanged")
                        .WithMany()
                        .HasForeignKey("LastChangedId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Rejupo.Models.Employee", "Owner")
                        .WithOne("AuthorizationToProcesPersonalDataDocument")
                        .HasForeignKey("Rejupo.Models.Docs.AuthorizationToProcesPersonalDataDocument", "OwnerId");
                });

            modelBuilder.Entity("Rejupo.Models.Docs.PersonalDataAuthorization_Document_Scope", b =>
                {
                    b.HasOne("Rejupo.Models.Docs.AuthorizationToProcesPersonalDataDocument", "Document")
                        .WithMany("PersonalDataAuthorization_Document_Scope")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Rejupo.Models.Docs.PersonalDataAuthorizationScope", "Scope")
                        .WithMany()
                        .HasForeignKey("ScopeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
